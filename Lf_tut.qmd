---
title: "Tutorial: Bangladesh labour force data analysis"
author: "Anthony Kwong"
format: html
editor: visual
code-fold: true
---

Welcome to our tutorial for analysing the Bangladesh labour force dataset. You can view the individual code chunks to see the full code, along with comments.

First we load our packages using pacman.

```{r}
pacman::p_load("tidyverse", "sf", "spdep", "haven", "geodata", "viridis", "INLA", "reactable", "ggplot2")
```

# Step 1: Data Wrangling

We will load the full dataset called lfs_data and do some data wrangling. Every row in the dataframe corresponds to an individual sampled in Bangladesh.

```{r}
#| output: false
#load survey data ----
lfs_data = haven::read_dta("./Bangladesh-Data/Bangladesh_LF_and_CL_Survey_2013/Dataset/LFS-2013-By Quarter.dta") %>% as_factor()

#Change age to numeric
lfs_data$age <- as.numeric(lfs_data$age)
#set female=1, male=0
lfs_data$sex_binary <- plyr::revalue(lfs_data$sex,c("1. male" = 0, "2. female" = 1))
#add household head variable. 1 if household head, 0 otherwise
unique(lfs_data$rel)
lfs_data = lfs_data%>%
  dplyr::mutate(house_head = ifelse(rel == "1. household head", 1, 0))

#add unemployed variable. based on nul1.
lfs_data = lfs_data %>%
  mutate(unemployed = case_when(
    nul1 == 1 ~ 1,
    .default = 0
  ))

#filter lf = 1, rename to lf_data since we filtered out students, retired etc

#check the levels of q48
levels(lfs_data$q48)
#add unemployed to q48 as a factor
levels(lfs_data$q48) <- c(levels(lfs_data$q48), "unemployed")
#set unemployed rows for q48
lfs_data$q48[lfs_data$unemployed == 1] <- "unemployed"
#check 
all(which(lfs_data$q48 == "unemployed") == which(lfs_data$unemployed == 1))

#add female househould head variable
lfs_data = lfs_data %>%
  dplyr::mutate(fem_hh_head = case_when(
    sex_binary == 1 & house_head == 1 ~ 1,
    .default = 0
  ))


#rename variables to be more understandable
lfs_data = lfs_data %>%
  dplyr::rename(
    #Rename class as edu_high
    edu_high = class,
    #Rename q48 to labour_status
    labour_status_type = q48,
    avail_to_work = nul1
  )
```

Create a table for labourforce and unemployment.

```{r}
lfs_tab = lfs_data %>%
  count(lf, unemployed)
reactable(lfs_tab)
```

Let's look at the age distribution on the entire dataset.

```{r}
ggplot(lfs_data, aes(x = age)) +
  geom_histogram()
```

We see that raw dataset contains individuals from 0 to 100. We are interested in people in the labour force so we create a new dataset called lf_data which only includes people in the labour force. We also apply an age filter, to include only those between 14-45 years old.

```{r}
lf_data = lfs_data %>% 
  dplyr::filter(age > 14) %>%
  dplyr::filter(age < 45) %>%
  dplyr::filter(lf == 1)
```

# Step 2: Exploratory Data Analysis

In this section, we will analyse trends within sex, age cohort and upazilla (districts of Bangladesh). The rows have PPS (probability proportional to size) weights, which we will use for all our calculations.

## 1. What percentage of women/men are in the labour force (LF)?

```{r}
lfa_tab = lfs_data %>%
  group_by(sex) %>%
  summarise(
    n_weighted = sum(wgt_final * (lf == 1), na.rm = TRUE),
    total_weight = sum(wgt_final, na.rm = T),
    wpct_in_lf = 100 * n_weighted / total_weight
  )
reactable(lfa_tab)
```

What if we control for age cohorts? We first create a new categorical variable based on age, with cohorts ofs 5 years long.

```{r}
# Create 5-year age cohorts
lf_data$age_cohort <- cut(
  lf_data$age,
  breaks = seq(15, 45, by = 5),  # 15, 20, 25, ..., 45
  right = FALSE,                # intervals: [15,20), [20,25), ...
  labels = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44")
)
```

```{r}
reactable(
  lf_data %>%
  group_by(sex, age_cohort) %>%
  summarise(
    n_in_lf = sum(lf == 1, na.rm = TRUE),
    n_total = n(),
    pct_in_lf = 100 * n_in_lf / n_total,
    .groups = "drop"
  )
)
```

## 2. What is the FemHhouseholdHead prevalence by UpaZilla (districts) upz?

```{r}
fhead_tab = lf_data %>%
  group_by(upz_name) %>%
  summarise(
    total_weight = sum(wgt_final),
    num_fhead = sum(wgt_final * (fem_hh_head == 1)),
    pct_fhead = num_fhead/total_weight
  )
reactable(fhead_tab)

# n_weighted = sum(wgt_final * (lf == 1), na.rm = TRUE),
#     total_weight = sum(wgt_final, na.rm = T),
#     wpct_in_lf = 100 * n_weighted / total_weight
```

## 3. Breaking up agegroups, and adding a sex-specific grouping, what is the smallest Zilla count you arrive at in this sample?

```{r}
zilla_counts = lf_data %>%
  group_by(sex, zl, age_cohort) %>%
  summarise(
    count = n(),
    weight = sum(wgt_final)
  )

reactable(zilla_counts %>% 
            arrange(weight))
```

The smallest zilla count is 10, the largest is 674.

## 4. What's the fewest Unemployed sample members in a sex in an age-group in a Zilla?

```{r}
uemp_tab = lf_data %>%
  dplyr::group_by(age_cohort, sex, zl) %>%
  summarise(
    zilla_count = n(),
    unemp = sum(unemployed == 1),
    uemp_rate = unemp/zilla_count,
    .groups = "drop"
  )

uemp_tab = uemp_tab %>% 
  arrange(unemp)
reactable(uemp_tab)
```

In many zillas, the 15-19 cohort have 0 unemployment. The zilla counts are not very high here.

## 5. What's the weighted unemployment rate in each upazilla, grouped by sex? The weights are found in wgt_final.

```{r}
weighted_urate <- lf_data %>%
  group_by(sex, zl) %>%
  summarise(
    total_weight = sum(wgt_final, na.rm = TRUE),
    unemployed_weight = sum(wgt_final * unemployed, na.rm = TRUE),
    weighted_unemployment_rate = unemployed_weight / total_weight,
    .groups = "drop"
  )

weighted_urate = weighted_urate %>%
  arrange(weighted_unemployment_rate)
reactable(weighted_urate)
```

A geographic plot would work here as well.

## 6. What's the weighted employment rate in each upazilla, grouped by sex/age?

```{r}
weighted_urate2 <- lf_data %>%
  group_by(age_cohort,sex, zl) %>%
  summarise(
    total_weight = sum(wgt_final, na.rm = TRUE),
    unemployed_weight = sum(wgt_final * unemployed, na.rm = TRUE),
    weighted_unemployment_rate = unemployed_weight / total_weight,
    .groups = "drop"
  )

weighted_urate2 = weighted_urate2 %>%
  arrange(weighted_unemployment_rate)
reactable(weighted_urate2)
```

Following on from (4), there are many zillas where people are fully employed.

# Step 3: Data wrangling (part 2)

To include additional data wrangling for model fitting.

Save the clean dataset.

```{r}
readr::write_csv(lf_data, file = "./Bangladesh-Data/Bangladesh_LF_and_CL_Survey_2013/Dataset/cleaned_lfdata.csv")
```

The following is to be removed.

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
